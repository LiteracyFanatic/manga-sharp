// <auto-generated />
namespace manga.Migrations

open System
open MangaSharp.Database
open Microsoft.EntityFrameworkCore
open Microsoft.EntityFrameworkCore.Infrastructure
open Microsoft.EntityFrameworkCore.Metadata
open Microsoft.EntityFrameworkCore.Migrations
open Microsoft.EntityFrameworkCore.Storage.ValueConversion

[<DbContext(typeof<MangaContext>)>]
[<Migration("20220315060107_AddCreatedToMangaAndChapters")>]
type AddCreatedToMangaAndChapters() =
    inherit Migration()

    override this.Up(migrationBuilder:MigrationBuilder) =
        migrationBuilder.AddColumn<DateTime>(
            name = "Created"
            ,table = "Manga"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AlterColumn<DateTime>(
            name = "Created"
            ,table = "Manga"
            ,``type`` = "TEXT"
            ,oldNullable = true
            ,nullable = false
            ,defaultValueSql = "datetime"
        ) |> ignore

        migrationBuilder.AddColumn<DateTime>(
            name = "Created"
            ,table = "Chapters"
            ,``type`` = "TEXT"
            ,nullable = true
            ) |> ignore

        migrationBuilder.AlterColumn<DateTime>(
            name = "Created"
            ,table = "Chapters"
            ,``type`` = "TEXT"
            ,oldNullable = true
            ,nullable = false
            ,defaultValueSql = "datetime"
        ) |> ignore


    override this.Down(migrationBuilder:MigrationBuilder) =
        migrationBuilder.DropColumn(
            name = "Created"
            ,table = "Manga"
            ) |> ignore

        migrationBuilder.DropColumn(
            name = "Created"
            ,table = "Chapters"
            ) |> ignore


    override this.BuildTargetModel(modelBuilder: ModelBuilder) =
        modelBuilder.HasAnnotation("ProductVersion", "6.0.2") |> ignore

        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Chapter", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<DateTime>("Created")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                .HasDefaultValueSql("datetime()") |> ignore

            b.Property<string>("DownloadStatus")
                .IsRequired(true)
                .HasMaxLength(10)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<int>("Index")
                .IsRequired(true)
                .HasColumnType("INTEGER")
                |> ignore

            b.Property<Guid>("MangaId")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string option>("Title")
                .IsRequired(false)
                .HasMaxLength(200)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Url")
                .IsRequired(true)
                .HasMaxLength(200)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("MangaId")
                |> ignore

            b.ToTable("Chapters") |> ignore

        )) |> ignore

        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Manga", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<DateTime option>("Accessed")
                .IsRequired(false)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string option>("Bookmark")
                .IsRequired(false)
                .HasMaxLength(10)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<DateTime>("Created")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                .HasDefaultValueSql("datetime()") |> ignore

            b.Property<string>("Direction")
                .IsRequired(true)
                .HasMaxLength(10)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Title")
                .IsRequired(true)
                .HasMaxLength(1000)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Url")
                .IsRequired(true)
                .HasMaxLength(200)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("Title")
                .IsUnique()
                |> ignore

            b.ToTable("Manga") |> ignore

        )) |> ignore

        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Page", (fun b ->

            b.Property<Guid>("Id")
                .IsRequired(true)
                .ValueGeneratedOnAdd()
                .HasColumnType("TEXT")
                |> ignore

            b.Property<Guid>("ChapterId")
                .IsRequired(true)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("File")
                .IsRequired(true)
                .HasMaxLength(2000)
                .HasColumnType("TEXT")
                |> ignore

            b.Property<string>("Name")
                .IsRequired(true)
                .HasMaxLength(10)
                .HasColumnType("TEXT")
                |> ignore

            b.HasKey("Id")
                |> ignore


            b.HasIndex("ChapterId")
                |> ignore

            b.ToTable("Pages") |> ignore

        )) |> ignore
        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Chapter", (fun b ->
            b.HasOne("MangaSharp.Database.MangaDomain+Manga", "Manga")
                .WithMany("Chapters")
                .HasForeignKey("MangaId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Page", (fun b ->
            b.HasOne("MangaSharp.Database.MangaDomain+Chapter", "Chapter")
                .WithMany("Pages")
                .HasForeignKey("ChapterId")
                .OnDelete(DeleteBehavior.Cascade)
                .IsRequired()
                |> ignore

        )) |> ignore
        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Chapter", (fun b ->

            b.Navigation("Pages")
            |> ignore
        )) |> ignore
        modelBuilder.Entity("MangaSharp.Database.MangaDomain+Manga", (fun b ->

            b.Navigation("Chapters")
            |> ignore
        )) |> ignore

